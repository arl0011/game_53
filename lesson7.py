import sqlite3


def create_connection(db_name):
    try:
        return sqlite3.connect(db_name)
    except sqlite3.Error as e:
        print(e)
        return None


def create_products_table(connection):
    sql = '''
    CREATE TABLE IF NOT EXISTS products (
        id INTEGER PRIMARY KEY AUTOINCREMENT,
        product_title VARCHAR(200) NOT NULL,
        price REAL NOT NULL DEFAULT 0.0,
        quantity INTEGER NOT NULL DEFAULT 0
    )
    '''
    try:
        cursor = connection.cursor()
        cursor.execute(sql)
    except sqlite3.Error as e:
        print(e)


def insert_products(connection):
    sql = '''INSERT INTO products (product_title, price, quantity)
             VALUES (?, ?, ?)'''
    products = [
        ("–ú—ã–ª–æ –¥–µ—Ç—Å–∫–æ–µ", 45.0, 20),
        ("–ó—É–±–Ω–∞—è –ø–∞—Å—Ç–∞", 120.5, 15),
        ("–®–∞–º–ø—É–Ω—å", 230.0, 10),
        ("–ì–µ–ª—å –¥–ª—è –¥—É—à–∞", 190.0, 12),
        ("–°–∞–ª—Ñ–µ—Ç–∫–∏ –≤–ª–∞–∂–Ω—ã–µ", 55.5, 25),
        ("–¢—É–∞–ª–µ—Ç–Ω–∞—è –±—É–º–∞–≥–∞", 30.0, 50),
        ("–ú—ã–ª–æ –∂–∏–¥–∫–æ–µ", 60.0, 18),
        ("–ü–æ—Ä–æ—à–æ–∫ —Å—Ç–∏—Ä–∞–ª—å–Ω—ã–π", 300.0, 8),
        ("–û—Å–≤–µ–∂–∏—Ç–µ–ª—å –≤–æ–∑–¥—É—Ö–∞", 150.0, 6),
        ("–ì—É–±–∫–∏ –¥–ª—è –º—ã—Ç—å—è", 25.0, 40),
        ("–ü–∞–∫–µ—Ç—ã –¥–ª—è –º—É—Å–æ—Ä–∞", 70.0, 30),
        ("–°—Ä–µ–¥—Å—Ç–≤–æ –¥–ª—è –º—ã—Ç—å—è –ø–æ—Å—É–¥—ã", 110.0, 14),
        ("–©—ë—Ç–∫–∞ –¥–ª—è –æ–±—É–≤–∏", 90.0, 9),
        ("–ß–∏—Å—Ç—è—â–µ–µ —Å—Ä–µ–¥—Å—Ç–≤–æ", 160.0, 7),
        ("–ü–µ–Ω–∞ –¥–ª—è –±—Ä–∏—Ç—å—è", 200.0, 11)
    ]
    try:
        cursor = connection.cursor()
        cursor.executemany(sql, products)
        connection.commit()
        print("‚úÖ 15 —Ç–æ–≤–∞—Ä–æ–≤ –¥–æ–±–∞–≤–ª–µ–Ω—ã.")
    except sqlite3.Error as e:
        print(e)


def update_quantity_by_id(connection, product_id, new_quantity):
    sql = '''UPDATE products SET quantity = ? WHERE id = ?'''
    try:
        cursor = connection.cursor()
        cursor.execute(sql, (new_quantity, product_id))
        connection.commit()
        print(f"üîÑ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–≤–∞—Ä–∞ —Å ID={product_id} –æ–±–Ω–æ–≤–ª–µ–Ω–æ.")
    except sqlite3.Error as e:
        print(e)


def update_price_by_id(connection, product_id, new_price):
    sql = '''UPDATE products SET price = ? WHERE id = ?'''
    try:
        cursor = connection.cursor()
        cursor.execute(sql, (new_price, product_id))
        connection.commit()
        print(f"üí∞ –¶–µ–Ω–∞ —Ç–æ–≤–∞—Ä–∞ —Å ID={product_id} –æ–±–Ω–æ–≤–ª–µ–Ω–∞.")
    except sqlite3.Error as e:
        print(e)


def delete_product_by_id(connection, product_id):
    sql = '''DELETE FROM products WHERE id = ?'''
    try:
        cursor = connection.cursor()
        cursor.execute(sql, (product_id,))
        connection.commit()
        print(f"üóëÔ∏è –¢–æ–≤–∞—Ä —Å ID={product_id} —É–¥–∞–ª—ë–Ω.")
    except sqlite3.Error as e:
        print(e)


def select_all_products(connection):
    sql = '''SELECT * FROM products'''
    try:
        cursor = connection.cursor()
        cursor.execute(sql)
        rows = cursor.fetchall()
        print("\nüì¶ –í—Å–µ —Ç–æ–≤–∞—Ä—ã:")
        for row in rows:
            print(row)
    except sqlite3.Error as e:
        print(e)


def filter_products_by_price_and_quantity(connection, price_limit, min_quantity):
    sql = '''SELECT * FROM products WHERE price < ? AND quantity > ?'''
    try:
        cursor = connection.cursor()
        cursor.execute(sql, (price_limit, min_quantity))
        rows = cursor.fetchall()
        print(f"\nüîç –¢–æ–≤–∞—Ä—ã —Å —Ü–µ–Ω–æ–π < {price_limit} –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º > {min_quantity}:")
        for row in rows:
            print(row)
    except sqlite3.Error as e:
        print(e)


def search_products_by_name(connection, search_term):
    sql = '''SELECT * FROM products WHERE product_title LIKE ?'''
    try:
        cursor = connection.cursor()
        cursor.execute(sql, (f"%{search_term}%",))
        rows = cursor.fetchall()
        print(f"\nüîé –ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é ('{search_term}'):")
        for row in rows:
            print(row)
    except sqlite3.Error as e:
        print(e)



database_name = 'products.db'
conn = create_connection(database_name)

if conn:
    print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
    create_products_table(conn)
    insert_products(conn)


    update_price_by_id(conn, 1, 99.99)
    update_quantity_by_id(conn, 2, 50)


    delete_product_by_id(conn, 3)


    select_all_products(conn)


    filter_products_by_price_and_quantity(conn, 100, 10)


    search_products_by_name(conn, "–º—ã–ª–æ")

    conn.close()
    print("\n‚úÖ –†–∞–±–æ—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞.")